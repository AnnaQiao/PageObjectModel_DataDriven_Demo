package example.trademeSellAndBuy.utility;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ExcelUtil extends BaseTest {
	//Main Directory of the project
	public static final String currentDir = System.getProperty("user.dir");
	//Location of Test data excel file
    public static String testDataExcelPath = null;
   
    //Excel WorkBook
    private static XSSFWorkbook excelWBook;
 
    //Excel Sheet
    private static XSSFSheet excelWSheet;
    //Excel cell
    private static XSSFCell cell;
    //Excel cell
    private static XSSFCell row;
	// row Number
	public static int rowNumber;
	// Column Number
	public static int columnNumber;

	// Setter and Getters of row and columns
	public static void setColumnNumber(int pColumnNumber) {
		columnNumber = pColumnNumber;
	}

	public static int getColumnNumber() {

		return columnNumber;
	}

	public static void setRowNumber(int pRowNumber) {
		rowNumber = pRowNumber;
	}

	public static int getRowNumber() {
		return rowNumber;
	}
	//This method reads the test data from the Excel cell.
    //We are passing row number and column number as parameters
   public static void setExcelFileSheet(String sheetName) throws IOException {
	   testDataExcelPath = currentDir+"\\SeleniumeTestNGPOMTrademe\\src\\example\\trademeSellAndBuy\\testData/";
	   // Open the Excel file
       FileInputStream ExcelFile = new FileInputStream(testDataExcelPath + testDataExcelFileName);
       excelWBook = new XSSFWorkbook(ExcelFile);
       excelWSheet = excelWBook.getSheet(sheetName);
   }
 //This method reads the test data from the Excel cell.
   //We are passing row number and column number as parameters.
   public static String getCellData(int ROWNum, int ColNum) {
   cell= excelWSheet.getRow(ROWNum).getCell(ColNum);
   DataFormatter formatter = new DataFormatter();
   String cellData = formatter.formatCellValue(cell);
   return cellData;
   }
   
 //This method takes row number as a parameter and returns the data of given row number.
   
   
   
   
}
